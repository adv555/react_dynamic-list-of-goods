{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","API_URL","getAll","a","fetch","response","json","get5First","sort","b","localeCompare","slice","getRedGoods","filter","buttons","label","dataCy","getGoods","App","useState","setGoods","isLoading","setIsLoading","error","setError","className","type","onClick","setTimeout","then","data","catch","err","finally","onButtonClick","message","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,U,uBCTdC,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,yBAGEA,EAASC,QAHX,4C,sBAMA,IAAMC,EAAS,uCAAG,4BAAAJ,EAAA,sEACHD,IADG,cACjBR,EADiB,yBAGhBA,EACJc,MAAK,SAACL,EAAGM,GAAJ,OAAUN,EAAEJ,KAAKW,cAAcD,EAAEV,SACtCY,MAAM,EAAG,IALW,2CAAH,qDAQTC,EAAW,uCAAG,4BAAAT,EAAA,sEACLD,IADK,cACnBR,EADmB,yBAGlBA,EAAMmB,QAAO,SAAAjB,GAAI,MAAmB,QAAfA,EAAKE,UAHR,2CAAH,qDCblBgB,EAAoB,CACxB,CACEC,MAAO,iBACPC,OAAQ,aACRC,SAAUf,EACVL,MAAO,cAET,CACEkB,MAAO,qBACPC,OAAQ,oBACRC,SAAUV,EACVV,MAAO,WAET,CACEkB,MAAO,iBACPC,OAAQ,aACRC,SAAUL,EACVf,MAAO,cAIEqB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOzB,EAAP,KAAc0B,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAuB,MAAjD,mBAAOI,EAAP,KAAcC,EAAd,KAsBA,OACE,sBAAKC,UAAU,cAAf,UACE,oBAAIA,UAAU,QAAd,mCACCX,EAAQnB,KAAI,gBACXoB,EADW,EACXA,MAAOC,EADI,EACJA,OAAQC,EADJ,EACIA,SAAUpB,EADd,EACcA,MADd,OAGX,wBAEE6B,KAAK,SACL,UAASV,EACTW,QACE,kBA7BY,SAACV,GACrBK,GAAa,GACbE,EAAS,MAETI,YAAW,WACTX,IACGY,MAAK,SAACC,GACLV,EAASU,MAEVC,OAAM,SAACC,GACNR,EAASQ,MAEVC,SAAQ,WACPX,GAAa,QAEhB,KAcWY,CAAcjB,IAEtBQ,UAAS,sBAAiB5B,GAP5B,SASGkB,GARIA,MAYT,sBAAKU,UAAU,4BAAf,UAEGJ,GAAa,mBAAGI,UAAU,gBAAb,wBACbF,GAAS,mBAAGE,UAAU,uBAAb,SAAqCF,EAAMY,WAEnDd,IAAcE,GAAS,cAAC,EAAD,CAAW7B,MAAOA,W,MCxEnD0C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0125d87.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          style={{ color: good.color }}\n        >\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll(): Promise<Good[]> {\n  const response = await fetch(API_URL);\n\n  return response.json();\n}\n\nexport const get5First = async () => {\n  const goods = await getAll();\n\n  return goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5);\n};\n\nexport const getRedGoods = async () => {\n  const goods = await getAll();\n\n  return goods.filter(good => good.color === 'red');\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Button, Good } from './types';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nconst buttons: Button[] = [\n  {\n    label: 'Load all goods',\n    dataCy: 'all-button',\n    getGoods: getAll,\n    style: 'is-primary',\n  },\n  {\n    label: 'Load 5 first goods',\n    dataCy: 'first-five-button',\n    getGoods: get5First,\n    style: 'is-info',\n  },\n  {\n    label: 'Load red goods',\n    dataCy: 'red-button',\n    getGoods: getRedGoods,\n    style: 'is-danger',\n  },\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  type GetGoods = () => Promise<Good[]>;\n\n  const onButtonClick = (getGoods:GetGoods) => {\n    setIsLoading(true);\n    setError(null);\n\n    setTimeout(() => {\n      getGoods()\n        .then((data) => {\n          setGoods(data);\n        })\n        .catch((err) => {\n          setError(err);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }, 1000);\n  };\n\n  return (\n    <div className=\"App section\">\n      <h1 className=\"title\">Dynamic list of Goods</h1>\n      {buttons.map(({\n        label, dataCy, getGoods, style,\n      }) => (\n        <button\n          key={label}\n          type=\"button\"\n          data-cy={dataCy}\n          onClick={\n            () => onButtonClick(getGoods)\n          }\n          className={`button mr-2 ${style}`}\n        >\n          {label}\n        </button>\n      ))}\n\n      <div className=\"section is-size-4 is-half\">\n\n        {isLoading && <p className=\"has-text-info\">Loading...</p>}\n        {error && <p className=\"has-text-danger-dark\">{error.message}</p>}\n\n        {!isLoading && !error && <GoodsList goods={goods} />}\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport 'bulma';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}